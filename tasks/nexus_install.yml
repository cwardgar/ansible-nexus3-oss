---
- name: Ensure Nexus o/s group exists
  group:
    name: "{{ nexus_os_group }}"
    state: present

- name: Ensure Nexus o/s user exists
  user:
    name: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    shell: "/bin/bash"
    state: present

- name: Ensure Nexus installation directory exists
  file:
    path: "{{ nexus_installation_dir }}"
    state: "directory"

- name: Download and unpack Nexus
  unarchive:
    src: "http://download.sonatype.com/nexus/3/{{ nexus_package }}"
    dest: "{{ nexus_installation_dir }}"
    creates: "{{ nexus_home_dir }}"
    remote_src: yes

- name: Get status of default data directory
  stat:
    path: "{{ sonatype_work_dir }}"
  register: sonatype_work_dir_stat

- name: move data directory
  block:
    # As of ansible 2.3.0.0, there's no better way to recursively copy files when both src and dest are on the
    # remote machine. See https://stackoverflow.com/questions/25576871
  - name: copy default data directory to nexus_data_dir and change ownership
    command: >  # YAML multi-line, folded string. See https://stackoverflow.com/a/3790497/3874643
      rsync --archive --chown={{ nexus_os_user }}:{{ nexus_os_group }}
      {{ sonatype_work_dir }}/nexus3/ {{ nexus_data_dir }}

  - name: delete default data directory
    file:
      path: "{{ sonatype_work_dir }}"
      state: absent
  when: sonatype_work_dir_stat.stat.exists   # default data directory hasn't been moved yet

- name: Create Nexus tmp, backup, and etc-override directories
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
  with_items:
  - "{{ nexus_data_dir }}/etc"  # Will create "nexus.properties" in this directory.
  - "{{ nexus_tmp_dir }}"       # Appears in nexus.vmoptions.
  - "{{ nexus_backup_dir }}"    # Appears in nexus.vmoptions.

- name: Set application properties
  template:
    src: nexus.properties
    dest: "{{ nexus_data_dir }}/etc/nexus.properties"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"

- name: Set Nexus VM options
  template:
    src: nexus.vmoptions
    dest: "{{ nexus_home_dir }}/bin/nexus.vmoptions"

# See https://books.sonatype.com/nexus-book/reference3/install.html#service-linux
- name: Install Nexus as a service
  block:
  # I'm not sure if we even need to do this, but it's part of the installation instructions.
  # This doesn't set NEXUS_HOME for the current session. Is that okay? Should we source the file?
  - name: Set NEXUS_HOME for the service user
    lineinfile:
      path: "/home/{{ nexus_os_user }}/.bashrc"
      regexp: "^export NEXUS_HOME=.*"
      line: "export NEXUS_HOME={{ nexus_home_dir }}"

  - name: Set Nexus user
    template:
      src: nexus.rc
      dest: "{{ nexus_home_dir }}/bin/nexus.rc"

  - name: Create systemd service configuration
    template:
      src: "nexus.service"
      dest: "/etc/systemd/system"

- name: Finish installation of Nexus service, enable it, and start it
  systemd: name=nexus daemon_reload=yes enabled=yes state=started

- name: Wait for Nexus to be ready. Could take over a minute on Docker.
  wait_for: "port={{ nexus_default_port }}"


# TODO: This bit is from the original nexus_install.yml. It could still be useful in some form.

#- name: "Config nexus-backup shell cron"
#  cron:
#    name: "Backup nexus Blobstore"
#    minute: "1"
#    hour: "21"
#    job: "/sbin/nexus-blob-backup.sh 2>&1 | tee {{ nexus_backup_log }}"
#    state: present
#    user: "root"
